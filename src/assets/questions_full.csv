_id,sequence,title,description,mainfunction,difficulty,__v,frequency,uniquename,rating,hints,solution,jsmain,pythonmain
"5b3fa4f9b0b5ae24d7ba79a6",3,"Single Number","<p style=""margin-bottom: 10px;"">Given a&nbsp;<span style=""font-weight: 700;"">non-empty</span>&nbsp;array of integers, every element appears&nbsp;<em>twice</em>&nbsp;except for one. Find that single one.</p><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Note:</span></p><p style=""margin-bottom: 10px;"">Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 1:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input:</span> [2,2,1]
<span style=""font-weight: 700;"">Output:</span> 1
</pre><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 2:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input:</span> [4,1,2,1,2]
<span style=""font-weight: 700;"">Output:</span> 4</pre>","class Solution {
    public int singleNumber(int[] nums) {
        
    }
}",30,0,15,"single-number",3,"Array issue","<h4 id=""approach-4-bit-manipulation"" style=""font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; line-height: 1.7; color: rgb(51, 51, 51); margin-top: 1.275em; margin-bottom: 0.85em; font-size: 20px;"">Bit Manipulation</h4><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;""><span style=""font-weight: 700;"">Concept</span></p><ul style=""font-size: 16px;""><li style=""color: rgb(90, 90, 90);"">If we take XOR of zero and some bit, it will return that bit<ul><li><span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">a \oplus 0 = a</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.64444em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.72777em; vertical-align: -0.08333em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">a</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⊕</span><span class=""mord mathrm"" style=""margin-left: 0.22222em;"">0</span><span class=""mrel"" style=""margin-left: 0.27778em;"">=</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.27778em;"">a</span></span></span></span></span></li></ul></li><li style=""color: rgb(90, 90, 90);"">If we take XOR of two same bits, it will return 0<ul><li><span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">a \oplus a = 0</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.64444em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.72777em; vertical-align: -0.08333em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">a</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⊕</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em;"">a</span><span class=""mrel"" style=""margin-left: 0.27778em;"">=</span><span class=""mord mathrm"" style=""margin-left: 0.27778em;"">0</span></span></span></span></span></li></ul></li><li style=""color: rgb(90, 90, 90);""><span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">a \oplus b \oplus a = (a \oplus a) \oplus b = 0 \oplus b = b</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">a</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⊕</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em;"">b</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⊕</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em;"">a</span><span class=""mrel"" style=""margin-left: 0.27778em;"">=</span><span class=""mopen"" style=""margin-left: 0.27778em;"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">a</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⊕</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em;"">a</span><span class=""mclose"">)</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⊕</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em;"">b</span><span class=""mrel"" style=""margin-left: 0.27778em;"">=</span><span class=""mord mathrm"" style=""margin-left: 0.27778em;"">0</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⊕</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em;"">b</span><span class=""mrel"" style=""margin-left: 0.27778em;"">=</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.27778em;"">b</span></span></span></span></span></li></ul><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;"">So we can XOR all bits together to find the unique number.</p><iframe src=""https://leetcode.com/playground/3TAX3mmj/shared"" frameborder=""0"" width=""100%"" height=""225"" name=""3TAX3mmj"" style=""font-size: 16px;""></iframe><span style=""font-size: 16px;""></span><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;""><span style=""font-weight: 700;"">Complexity Analysis</span></p><ul style=""font-size: 16px;""><li style=""color: rgb(90, 90, 90);""><p style=""margin-bottom: 10px;"">Time complexity :&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(n)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mclose"">)</span></span></span></span></span>. We only iterate through&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">\text{nums}</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.43056em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.43056em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord text textstyle uncramped"">nums</span></span></span></span></span>, so the time complexity is the number of elements in&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">\text{nums}</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.43056em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.43056em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord text textstyle uncramped"">nums</span></span></span></span></span>.</p></li><li style=""color: rgb(90, 90, 90);""><p style=""margin-bottom: 10px;"">Space complexity :&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(1)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathrm"">1</span><span class=""mclose"">)</span></span></span></span></span>.</p></li></ul>","/**
 * @param {number[]} nums
 * @return {number}
 */
var singleNumber = function(nums) {
    
};","class Solution(object):
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        "
"5b3fa4f9b0b5ae24d7ba79a5",1,"Two Sum","<div class=""question-description__3U1T"" style=""line-height: 24px; padding-top: 10px;""><p style=""margin-bottom: 10px;"">Given an array of integers, return&nbsp;<span style=""font-weight: 700;"">indices</span>&nbsp;of the two numbers such that they add up to a specific target.</p><p style=""margin-bottom: 10px;"">You may assume that each input would have&nbsp;<span style=""font-weight: 700;""><em>exactly</em></span>&nbsp;one solution, and you may not use the&nbsp;<em>same</em>&nbsp;element twice.</p><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example:</span></p><pre style=""line-height: 1.42857;"">Given nums = [2, 7, 11, 15], target = 9,

Because nums[<span style=""font-weight: 700;"">0</span>] + nums[<span style=""font-weight: 700;"">1</span>] = 2 + 7 = 9,
return [<span style=""font-weight: 700;"">0</span>, <span style=""font-weight: 700;"">1</span>].</pre></div>","class Solution {
    public int[] twoSum(int[] nums, int target) {
        
    }
}",10,0,100,"two-sum",5,"Use hashmap to store the value","<h4 id=""approach-3-one-pass-hash-table"" style=""font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; line-height: 1.7; color: rgb(51, 51, 51); margin-top: 1.275em; margin-bottom: 0.85em; font-size: 20px;"">One-pass Hash Table</h4><h4 id=""approach-3-one-pass-hash-table"" style=""font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; line-height: 1.7; color: rgb(51, 51, 51); margin-top: 1.275em; margin-bottom: 0.85em; font-size: 20px;""><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;"">It turns out we can do it in one-pass. While we iterate and inserting elements into the table, we also look back to check if current element's complement already exists in the table. If it exists, we have found a solution and return immediately.</p><iframe src=""https://leetcode.com/playground/fbBQEjxv/shared"" frameborder=""0"" width=""100%"" height=""242"" name=""fbBQEjxv"" style=""font-size: 16px;""></iframe><span style=""font-size: 16px;""></span><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;""><span style=""font-weight: 700;"">Complexity Analysis:</span></p><ul style=""font-size: 16px;""><li style=""color: rgb(90, 90, 90);""><p style=""margin-bottom: 10px;"">Time complexity :&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(n)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mclose"">)</span></span></span></span></span>. We traverse the list containing&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">n</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.43056em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.43056em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span></span></span></span></span>&nbsp;elements only once. Each look up in the table costs only&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(1)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathrm"">1</span><span class=""mclose"">)</span></span></span></span></span>&nbsp;time.</p></li><li style=""color: rgb(90, 90, 90);""><p style=""margin-bottom: 10px;"">Space complexity :&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(n)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mclose"">)</span></span></span></span></span>. The extra space required depends on the number of items stored in the hash table, which stores at most&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">n</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.43056em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.43056em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span></span></span></span></span>&nbsp;elements.</p></li></ul></h4>","/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    
};","class Solution(object):
    def twoSum(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """"""
        "
"5b3fa4f9b0b5ae24d7ba79a7",4,"Longest Common Prefix","<p style=""margin-bottom: 10px;"">Write a function to find the longest common prefix string amongst an array of strings.</p><p style=""margin-bottom: 10px;"">If there is no common prefix, return an empty string&nbsp;<code style=""font-size: 12.6px;"">""""</code>.</p><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 1:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input: </span>[""flower"",""flow"",""flight""]
<span style=""font-weight: 700;"">Output:</span> ""fl""
</pre><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 2:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input: </span>[""dog"",""racecar"",""car""]
<span style=""font-weight: 700;"">Output:</span> """"
<span style=""font-weight: 700;"">Explanation:</span> There is no common prefix among the input strings.
</pre><div><br></div>","class Solution {
    public String longestCommonPrefix(String[] strs) {
        
    }
}",20,0,30,"longest-common-prefix",2,"Dynamic programming","<h4 id=""approach-4-binary-search"" style=""font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; line-height: 1.7; color: rgb(51, 51, 51); margin-top: 1.275em; margin-bottom: 0.85em; font-size: 20px;"">Binary search</h4><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;"">The idea is to apply binary search method to find the string with maximum value&nbsp;<code style=""font-size: 14.4px;"">L</code>, which is common prefix of all of the strings. The algorithm searches space is the interval&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">(0 \ldots minLen)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mopen"">(</span><span class=""mord mathrm"">0</span><span class=""minner"" style=""margin-left: 0.16667em;"">…</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.16667em;"">m</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">i</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">L</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">e</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mclose"">)</span></span></span></span></span>, where&nbsp;<code style=""font-size: 14.4px;"">minLen</code>&nbsp;is minimum string length and the maximum possible common prefix. Each time search space is divided in two equal parts, one of them is discarded, because it is sure that it doesn't contain the solution. There are two possible cases:<em><code style=""font-size: 14.4px;"">S[1...mid]</code>&nbsp;is not a common string. This means that for each&nbsp;<code style=""font-size: 14.4px;"">j &gt; i S[1..j]</code>&nbsp;is not a common string and we discard the second half of the search space.&nbsp;</em><code style=""font-size: 14.4px;"">S[1...mid]</code>&nbsp;is common string. This means that for for each&nbsp;<code style=""font-size: 14.4px;"">i &lt; j S[1..i]</code>&nbsp;is a common string and we discard the first half of the search space, because we try to find longer common prefix.</p><p align=""center"" style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;""><img alt=""Finding the longest common prefix"" src=""https://leetcode.com/media/original_images/14_lcp_binary_search.png"" width=""539px"" style=""max-width: 100%; display: block;""></p><p align=""center"" style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;""><em>Figure 3. Finding the longest common prefix of strings using binary search technique</em></p><iframe src=""https://leetcode.com/playground/YtQyTJEL/shared"" frameborder=""0"" width=""100%"" height=""480"" name=""YtQyTJEL"" style=""font-size: 16px;""></iframe><span style=""font-size: 16px;""></span><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;""><span style=""font-weight: 700;"">Complexity Analysis</span></p><p style=""margin-bottom: 10px; color: rgb(90, 90, 90); font-size: 16px;"">In the worst case we have&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">n</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.43056em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.43056em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span></span></span></span></span>&nbsp;equal strings with length&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">m</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.43056em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.43056em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">m</span></span></span></span></span></p><ul style=""font-size: 16px;""><li style=""color: rgb(90, 90, 90);""><p style=""margin-bottom: 10px;"">Time complexity :&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(S \cdot log(n))</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.05764em;"">S</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⋅</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em; margin-right: 0.01968em;"">l</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">o</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.03588em;"">g</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mclose"">)</span><span class=""mclose"">)</span></span></span></span></span>, where&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">S</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.68333em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.68333em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.05764em;"">S</span></span></span></span></span>&nbsp;is the sum of all characters in all strings.</p><p style=""margin-bottom: 10px;"">The algorithm makes&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">log(n)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.01968em;"">l</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">o</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.03588em;"">g</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mclose"">)</span></span></span></span></span>&nbsp;iterations, for each of them there are&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">S = m*n</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.68333em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 0.68333em; vertical-align: 0em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.05764em;"">S</span><span class=""mrel"" style=""margin-left: 0.27778em;"">=</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.27778em;"">m</span><span class=""mbin"" style=""margin-left: 0.22222em;"">∗</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em;"">n</span></span></span></span></span>&nbsp;comparisons, which gives in total&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(S \cdot log(n))</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.05764em;"">S</span><span class=""mbin"" style=""margin-left: 0.22222em;"">⋅</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-left: 0.22222em; margin-right: 0.01968em;"">l</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">o</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.03588em;"">g</span><span class=""mopen"">(</span><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic;"">n</span><span class=""mclose"">)</span><span class=""mclose"">)</span></span></span></span></span>&nbsp;time complexity.</p></li><li style=""color: rgb(90, 90, 90);""><p style=""margin-bottom: 10px;"">Space complexity :&nbsp;<span class=""maths katex-rendered""><span class=""katex"" style=""font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 1.21em; line-height: 1.2; font-family: KaTeX_Main, &quot;Times New Roman&quot;, serif; white-space: nowrap;""><span class=""katex-mathml"" style=""position: absolute; clip: rect(1px, 1px, 1px, 1px); padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden;""><math><semantics><annotation encoding=""application/x-tex"">O(1)</annotation></semantics></math></span><span class=""katex-html"" aria-hidden=""true"" style=""display: inline-block;""><span class=""strut"" style=""display: inline-block; height: 0.75em;""></span><span class=""strut bottom"" style=""display: inline-block; height: 1em; vertical-align: -0.25em;""></span><span class=""base textstyle uncramped"" style=""display: inline-block;""><span class=""mord mathit"" style=""font-family: KaTeX_Math; font-style: italic; margin-right: 0.02778em;"">O</span><span class=""mopen"">(</span><span class=""mord mathrm"">1</span><span class=""mclose"">)</span></span></span></span></span>. We only used constant extra space.&nbsp;</p></li></ul>","/**
 * @param {string[]} strs
 * @return {string}
 */
var longestCommonPrefix = function(strs) {
    
};","class Solution(object):
    def longestCommonPrefix(self, strs):
        """"""
        :type strs: List[str]
        :rtype: str
        """"""
        "
"5b3fa4f9b0b5ae24d7ba79a8",2,"Reverse String","<div class=""question-description__3U1T"" style=""line-height: 24px; padding-top: 10px;""><p style=""margin-bottom: 10px;"">Write a function that takes a string as input and returns the string reversed.</p><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example:</span><br>Given s = ""hello"", return ""olleh"".</p><p style=""margin-bottom: 10px;""></p></div>","class Solution {
    public String reverseString(String s) {
        
    }
}",10,0,90,"reverse-string",5,"Two pointers","<pre style=""line-height: 1.42857; border-width: initial; border-style: none; border-color: initial;""><code style=""white-space: pre; word-wrap: normal;"">var reverseString = <span class=""hljs-function""><span class=""hljs-keyword"" style=""font-weight: bold;"">function</span><span class=""hljs-params"">(s)</span> {</span>
    answer = <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">''</span>
    <span class=""hljs-keyword"" style=""font-weight: bold;"">for</span> (<span class=""hljs-built_in"" style=""color: rgb(57, 115, 0);"">i</span> = s.<span class=""hljs-built_in"" style=""color: rgb(57, 115, 0);"">length</span> - <span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">1</span>; <span class=""hljs-built_in"" style=""color: rgb(57, 115, 0);"">i</span> &gt;= <span class=""hljs-number"" style=""color: rgb(136, 0, 0);"">0</span>; <span class=""hljs-built_in"" style=""color: rgb(57, 115, 0);"">i</span>--) {
        answer = answer.concat(s[i])
    }
    <span class=""hljs-keyword"" style=""font-weight: bold;"">return</span> answer
};
</code></pre><p style=""margin-bottom: 10px;""></p><p style=""margin-bottom: 10px;"">String.split('') will cause a runtime error if called within the for loop.</p>","/**
 * @param {string} s
 * @return {string}
 */
var reverseString = function(s) {
    
};","class Solution(object):
    def reverseString(self, s):
        """"""
        :type s: str
        :rtype: str
        """"""
        "
"5b3fa4f9b0b5ae24d7ba79a9",5,"Search Insert Position","<p style=""margin-bottom: 10px;"">Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p><p style=""margin-bottom: 10px;"">You may assume no duplicates in the array.</p><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 1:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input:</span> [1,3,5,6], 5
<span style=""font-weight: 700;"">Output:</span> 2
</pre><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 2:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input:</span> [1,3,5,6], 2
<span style=""font-weight: 700;"">Output:</span> 1
</pre><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 3:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input:</span> [1,3,5,6], 7
<span style=""font-weight: 700;"">Output:</span> 4
</pre><p style=""margin-bottom: 10px;""><span style=""font-weight: 700;"">Example 4:</span></p><pre style=""line-height: 1.42857;""><span style=""font-weight: 700;"">Input:</span> [1,3,5,6], 0
<span style=""font-weight: 700;"">Output:</span> 0</pre>","class Solution {
    public int searchInsert(int[] nums, int target) {
       
    }
}",30,0,60,"search-insert-position",3,"Use array","<pre style=""line-height: 1.42857; border-width: initial; border-style: none; border-color: initial;""><code style=""white-space: pre; word-wrap: normal;""><span class=""hljs-class""><span class=""hljs-keyword"" style=""font-weight: bold;"">class</span> <span class=""hljs-title"" style=""color: rgb(136, 0, 0); font-weight: bold;"">Solution</span><span class=""hljs-params"">(object)</span>:</span>
    <span class=""hljs-function""><span class=""hljs-keyword"" style=""font-weight: bold;"">def</span> <span class=""hljs-title"" style=""color: rgb(136, 0, 0); font-weight: bold;"">searchInsert</span><span class=""hljs-params"">(self, nums, target)</span>:</span>
        <span class=""hljs-string"" style=""color: rgb(136, 0, 0);"">""""""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""</span>       
        <span class=""hljs-keyword"" style=""font-weight: bold;"">return</span> len([x <span class=""hljs-keyword"" style=""font-weight: bold;"">for</span> x <span class=""hljs-keyword"" style=""font-weight: bold;"">in</span> nums <span class=""hljs-keyword"" style=""font-weight: bold;"">if</span> x&lt;target])</code></pre>","/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var searchInsert = function(nums, target) {
    
};","class Solution(object):
    def searchInsert(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        "
